#
# gpg.phillymesh.net
# OpenPGP Public SKS Key Server
#

# Unsecured HTTP server
server {

    # IPv4 private address (Port-forwarded from NAT firewall/router)
    #listen  80;
    listen 45.32.160.206:80;
    listen 45.32.160.206:11371; #Disabled for sslh listener

    # IPv6 global address
    #listen  [::]:80;
    #listen  [::]:11371;
    #listen [::1]:11371;
    listen [2001:19f0:9002:1029:5400:1ff:fe52:febc]:80;
    listen [2001:19f0:9002:1029:5400:1ff:fe52:febc]:11371;

    server_name gpg.phillymesh.net
                *.sks-keyservers.net *.pool.sks-keyservers.net
                keys.gnupg.net pgp.ipfire.org pgp.mit.edu;

    # Server Default Settings
    include server-defaults/*.conf;

    # Public Documents Root
    root    /var/www/gpg.phillymesh.net/public;

    # SKS Keyserver Configuration
    include webapps/sks-keyserver.conf;

   
}


# Hyperboria HTTP server
server {

    # IPv6 global address
    #listen  [::]:80;
    #listen  [::]:11371;
    listen [fc05:b69f:3895:1bcc:e934:137f:f8ae:6713]:80;
    listen [fc05:b69f:3895:1bcc:e934:137f:f8ae:6713]:11371;

    server_name h.gpg.phillymesh.net
                *.sks-keyservers.net *.pool.sks-keyservers.net
                keys.gnupg.net pgp.ipfire.org pgp.mit.edu;

    # Server Default Settings
    include server-defaults/*.conf;

    # Public Documents Root
    root    /var/www/gpg.phillymesh.net/public;

    # SKS Keyserver Configuration
    include webapps/sks-keyserver.conf;

}


# Secured HTTPS server
server {

    # IPv4 private address (Port-forwarded from NAT firewall/router)
    listen  443 ssl http2;
    listen  11372 ssl http2;

    # IPv6 global address
    #listen  [::]:443 ssl http2;
    #listen  [::]:11372 ssl http2;

    server_name gpg.phillymesh.net
                *.sks-keyservers.net *.pool.sks-keyservers.net
                keys.gnupg.net pgp.ipfire.org pgp.mit.edu;

    # Server Default Settings
    include server-defaults/*.conf;

    # Public Documents Root
    root    /var/www/gpg.phillymesh.net/public;

    # SKS Keyserver Configuration
    include webapps/sks-keyserver.conf;

#    location / {
#        proxy_pass http://127.0.0.1:11371;
#        proxy_pass_header Server;
#        add_header Via "1.1 $server_name:$proxy_port (nginx)";
#        #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
#        proxy_ignore_client_abort on;
#        client_max_body_size 8m;
#    }

    ssl_certificate /etc/letsencrypt/live/gpg.phillymesh.net/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/gpg.phillymesh.net/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/gpg.phillymesh.net/fullchain.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048
    # bits Generate with: openssl dhparam -out /etc/nginx/dhparam.pem
    # 4048
    ssl_dhparam /etc/nginx/dhparam.pem;

    # Mozilla "Intermediate configuration" copied from
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds =
    # 6 months)
    #add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling: fetch OCSP records from URL in ssl_certificate
    # and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    # Add headers to serve security related headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Robots-Tag none;
    add_header X-Download-Options noopen;
    add_header X-Permitted-Cross-Domain-Policies none;

}

# Tor Hidden Service
server {

    # IPv4 local address (Port-forwarded from Tor Onion router)
    listen  127.0.0.37:80;
    listen  127.0.0.37:11371;

    server_name phillygoh7mkcb44.onion;

    # Server Default Settings
    include server-defaults/*.conf;

    # Public Documents Root
    root    /var/www/gpg.phillymesh.net/public;

    # SKS Keyserver Configuration
    include webapps/sks-keyserver.conf;
}

# Tor Hidden Service 2
#server {

    # IPv4 local address (Port-forwarded from Tor Onion router)
#    listen  127.0.0.38:80;
#    listen  127.0.0.38:11371;

#    server_name phillygpg2tgcvkv.onion;

    # Server Default Settings
#    include server-defaults/*.conf;

    # Public Documents Root
#    root    /var/www/gpg.phillymesh.net/public;

    # SKS Keyserver Configuration
#    include webapps/sks-keyserver.conf;
#}

